import os
import hashlib
import tkinter as tk
from tkinter import filedialog

def file_hash(file_path, block_size=65536):
    sha256_hash = hashlib.sha256()
    with open(file_path, "rb") as file:
        for block in iter(lambda: file.read(block_size), b""):
            sha256_hash.update(block)
    return sha256_hash.hexdigest()

def find_duplicate_files(directory):
    file_hash_dict = {}
    duplicate_files = []

    for dirpath, _, filenames in os.walk(directory):
        for filename in filenames:
            file_path = os.path.join(dirpath, filename)
            file_hash_value = file_hash(file_path)

            if file_hash_value in file_hash_dict:
                duplicate_files.append((file_path, file_hash_dict[file_hash_value]))
            else:
                file_hash_dict[file_hash_value] = file_path

    return duplicate_files

def select_directory():
    directory_path = filedialog.askdirectory()
    if directory_path:
        directory_entry.delete(0, tk.END)
        directory_entry.insert(tk.END, directory_path)

def find_duplicates():
    directory = directory_entry.get()
    if not directory:
        result_label.config(text="Please select a directory.")
        return

    duplicate_files = find_duplicate_files(directory)

    if not duplicate_files:
        result_label.config(text="No duplicate files found.")
    else:
        result_text = "Duplicate files found:\n"
        for file_path, original_file in duplicate_files:
            result_text += f"{file_path} is a duplicate of {original_file}\n"
        result_label.config(text=result_text)

if __name__ == "__main__":
    root = tk.Tk()
    root.title("Duplicate File Finder")
    root.geometry("400x300")

    title_label = tk.Label(root, text="Duplicate File Finder", font=("Helvetica", 16, "bold"))
    title_label.pack(pady=10)

    directory_frame = tk.Frame(root)
    directory_frame.pack()

    directory_label = tk.Label(directory_frame, text="Select Directory:")
    directory_label.pack(side=tk.LEFT)

    directory_entry = tk.Entry(directory_frame, width=30)
    directory_entry.pack(side=tk.LEFT)

    browse_button = tk.Button(directory_frame, text="Browse", command=select_directory)
    browse_button.pack(side=tk.LEFT)

    find_button = tk.Button(root, text="Find Duplicates", command=find_duplicates)
    find_button.pack(pady=10)

    result_label = tk.Label(root, text="", font=("Helvetica", 12))
    result_label.pack()

    root.mainloop()
